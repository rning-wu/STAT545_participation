suppressPackageStartupMessages()
library(gapminder)
library(tidyverse)
packages.install(tidyverse)
history
install.packages(tidyverse_)
install.packages(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library("tidyverse")
suppressPackageStartupMessages()
install.packages("tidyverse")
install.packages("xml2")
install.packages("tidyverse")
install.packages("xml2")
install.packages("tidyverse")
install.packages("tidyverse")
select(gapminder, year, lifeExp, country)
install.packages("tidyverse", lib="/usr/lib/R/library")
library("tidyverse", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
select(gapminder, year, lifeExp, country)
detach("package:ggplot2", unload=TRUE)
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("gapminder", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
select(gapminder, year, lifeExp, country)
select(gapminder, country:lifeExp)
a <- select(gapminder, -lifeExp)
select(gapminder, continent, everything())
rename(gapminder, cont=continent)
arrange(gapminder, lifeExp)
arrange(gapminder, year, lifeExp)
arrange(gapminder, desc(year))
gapminder %>%
select(year, lifeExp, country) %>%
arrange(year, lifeExp)
gapminder %>%
filter(pop > 1e6)
gapminder %>%
filter(pop > 100e6)
gapminder %>%
filter(continent=="Asia")
tidyverse
library("tidyverse", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
detach("package:stats", unload=TRUE)
library("stats4", lib.loc="/usr/lib/R/library")
library("stats", lib.loc="/usr/lib/R/library")
detach("package:stats4", unload=TRUE)
library("knitr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
arrange(gapminder, desc(year))
library("rmarkdown", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("gapminder", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("crayon", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
gapminder %>%
filter(country %in% c("Canada") | (country %in% c("Algeria"), year >= 1960, year < 1970))
gapminder %>%
filter(country %in% c("Canada") | (country %in% c("Algeria") & year >= 1960 & year < 1970))
library(gapminder)
library(tidyverse)
library(gapminder)
help ggplot
ggplot
ggplot(gapminder, aes(x=lifeExp, y=gdpPercap)) +
geom_point()
ggplot(gapminder, x=lifeExp, y = gdpPercap) + geom_point()
ggplot(gapminder, aes(x = lifeExp, y = log(gdpPercap))) + geom_point();
ggplot(gapminder, aes(lifeExp, gdpPercap)) + geom_point() + scale_y_log10()
ggplot(gapminder) + geom_point(aes(lifeExp, gdpPercap)) + scale_y_log10()
ggplot(gapminder, aes(lifeExp)) + geom_histogram()
ggplot(gapminder, aes(lifeExp)) + geom_histogram(nbin = 50)
ggplot(gapminder, aes(lifeExp)) + geom_histogram(bins = 50)
ggplot(gapminder, aes(lifeExp)) + geom_density()
ggplot(gapminder, aes(lifeExp)) + geom_density(bw = 0.1)
ggplot(gapminder, aes(lifeExp)) + geom_density(bw = 5)
ggplot(gapminder, aes(lifeExp)) + geom_density(bw = 1)
ggplot(gapminder, aes(lifeExp)) + geom_density(bw = 1, fill = "orange")
ggplot(gapminder, aes(lifeExp)) + geom_histogram(bins = 50, fill = "blue")
ggplot(gapminder, aes(lifeExp)) + geom_histogram(bins = 50, fill = "cyan")
ggplot(gapminder, aes(lifeExp)) + geom_histogram(bins = 50, fill = "yellow")
ggplot(gapminder, aes(lifeExp)) + geom_histogram(bins = 50, fill = "grey")
ggplot(gapminder, aes(lifeExp)) + geom_histogram(bins = 50, fill = "grey") + geom_density()
ggplot(gapminder, aes(lifeExp)) + geom_histogram(bins = 50, fill = "grey")
a = ggplot(gapminder, aes(continent, pop)) + scale_y_log10()
a = a + geom_boxplot()
a
a = a + geom_violin()
a
a
a = a + geom_boxplot()
a = ggplot(gapminder, aes(continent, pop)) + scale_y_log10()
a = a + geom_boxplot()
a
a + geom_point()
a + geom_point(a=0.1)
a = ggplot(gapminder, aes(continent, pop)) + scale_y_log10()
```{r}
a = ggplot(gapminder, aes(continent, pop)) + scale_y_log10()
a + geom_boxplot()
a + geom_violin()
a + geom_point(a=0.1)
a + geom_point(alpha=0.1)
a + geom_jitter(alpha = 0.1)
a + geom_jitter(alpha = 0.25)
a + geom_violin() + geom_jitter(alpha = 0.25)
a + geom_violin() + geom_jitter(alpha = 0.2)
a + geom_violin() + geom_jitter(alpha = 0.1)
gapminder %>%
filter(country == "Canada") %>%
ggplot(aes(year, lifeExp)) + geom_line()
gapminder %>%
filter(country == "Canada") %>%
ggplot(aes(year, lifeExp)) + geom_line() + geom_point()
ggplot(gapminder, aes(year, lifeExp)) + geom_line()
ggplot(gapminder, aes(year, lifeExp)) + geom_line(aes(group=country))
ggplot(gapminder, aes(year, lifeExp)) + geom_line(aes(group=country), alpha = 0.2)
x = c(10, 20, 30, 40)
var(x)
10^2 + 20^2 + 30^2 + 40^2
a = 10^2 + 20^2 + 30^2 + 40^2
x^2
mean(x^2)
mean(x)^2
diff = x - 25
diff
diff^2
gapminder %>%
mutate(gdp = gdpPercap * pop,
gdpBill = round(gdp/1e9, 2))
suppressPackageStartupMessages(library(gapminder))
suppressPackageStartupMessages(library(tidyverse))
gapminder %>%
mutate(gdp = gdpPercap * pop,
gdpBill = round(gdp/1e9, 2))
gapminder %>%
transmutate(gdp = gdpPercap * pop,
gdpBill = round(gdp/1e9, 2))
gapminder %>%
transmute(gdp = gdpPercap * pop,
gdpBill = round(gdp/1e9, 2))
gapminder %>%
mutate(lifeExp = if_else(country == 'Canada' & year == 1952, 70, lifeExp)) %>%
filter(country == 'Canada')
gapminder %>%
mutate(cc = paste(country, continent, sep = ', '))
gapminder %>%
summerize(mu = mean(lifeExp), md = median(lifeExp))
gapminder %>%
summarize(mu = mean(lifeExp), md = median(lifeExp))
gapminder %>%
group_by(country) %>%
summarise(mu = mean(lifeExp), md = median(lifeExp))
gapminder %>%
group_by(continent, country) %>%
summarise(mu = mean(lifeExp), md = median(lifeExp))
gapminder %>%
group_by(continent, country) %>%
summerize(md = median(gdpPercap))
gapminder %>%
group_by(continent, country) %>%
summarize(md = median(gdpPercap))
gapminder %>%
group_by(continent, country) %>%
summarize(md = median(gdpPercap)) %>%
summarize(min = minimum(md))
gapminder %>%
group_by(continent, country) %>%
summarize(md = median(gdpPercap)) %>%
summarize(minimum = min(md))
gapminder %>%
group_by(country) %>%
ggplot(aes(year, lifeExp)) + geom_line()
gapminder %>%
mutate(hvsl = lifeExp > 60) %>%
group_by(continent, hvsl) %>%
summerize(md = median(gdpPercap))
gapminder %>%
mutate(hvsl = lifeExp > 60) %>%
group_by(continent, hvsl) %>%
summarize(md = median(gdpPercap))
gapminder %>%
mutate(age = if_eles(lifeExp > 60, 'high', 'low')) %>%
group_by(continent, age) %>%
summarize(md = median(gdpPercap))
gapminder %>%
mutate(age = if_else(lifeExp > 60, 'high', 'low')) %>%
group_by(continent, age) %>%
summarize(md = median(gdpPercap))
gapminder %>%
mutate(age = if_else(lifeExp > 60, 'high', 'low')) %>%
group_by(continent, age) %>%
summarize(md = median(gdpPercap)) %>%
arrange(gdpPercap)
gapminder %>%
mutate(age = if_else(lifeExp > 60, 'high', 'low')) %>%
group_by(continent, age) %>%
summarize(md = median(gdpPercap)) %>%
arrange(MD)
gapminder %>%
mutate(age = if_else(lifeExp > 60, 'high', 'low')) %>%
group_by(continent, age) %>%
summarize(md = median(gdpPercap)) %>%
arrange(md)
gapminder %>%
group_by(country) %>%
mutate(growth = pop - first(pop))
gapminder %>%
group_by(country) %>%
mutate(change = pop-lag(pop))
gapminder %>%
group_by(country) %>%
mutate(change = pop-lag(pop)) %>%
filter(country = 'Rwanda')
gapminder %>%
group_by(country) %>%
mutate(change = pop-lag(pop)) %>%
filter(country == 'Rwanda')
gapminder %>%
group_by(country) %>%
mutate(change = pop-lag(pop)) %>%
filter(country == 'Japan')
gapminder %>%
group_by(country) %>%
mutate(change = pop-lag(pop)) %>%
filter(country == 'India')
gapminder %>%
group_by(country) %>%
mutate(change = pop-lag(pop)) %>%
filter(country == 'Russia')
gapminder %>%
group_by(country) %>%
mutate(change = pop-lag(pop)) %>%
filter(country == 'Russia')
gapminder %>%
group_by(country) %>%
mutate(change = pop-lag(pop)) %>%
filter(country == 'Germany')
gapminder %>%
group_by(country, continent) %>%
mutate(gain = lifeExp - lag(lifeExp)) %>%
filter(!is.na(gain)) %>%
summarize(min = min(gain)) %>%
summarize(min = min(min))
gapminder %>%
group_by(continent, country) %>%
mutate(gain = lifeExp - lag(lifeExp)) %>%
filter(!is.na(gain)) %>%
summarize(min = min(gain)) %>%
summarize(min = min(min))
gapminder %>%
mutate(totalGDP = gdpPercap*pop) %>%
#  mutate(relGDP = totalGDP/totalGDP)
gapminder %>%
mutate(totalGDP = gdpPercap*pop)
gapminder %>%
mutate(totalGDP = gdpPercap*pop)
gapminder %>%
mutate(canGDP = rep(canGDP, nlevels(country)),
gdp = gdpPercap*pop,
rel_gdp = gdp/canGDP)
filter(country == 'Canada') %>%
`[[`("gdp")
canGDP = gapminder %>%
mutate(gdp = gdpPercap * pop) %>%
filter(country == 'Canada') %>%
`[[`("gdp")
gapminder %>%
mutate(canGDP = rep(canGDP, nlevels(country)),
gdp = gdpPercap*pop,
rel_gdp = gdp/canGDP)
arrange(min)
gapminder %>%
group_by(continent, country) %>%
mutate(gain = lifeExp - lag(lifeExp)) %>%
filter(!is.na(gain)) %>%
summarize(min = min(gain)) %>%
summarize(min = min(min)) %>%
arrange(min)
canGDP = gapminder %>%
mutate(gdp = gdpPercap * pop) %>%
filter(country == 'Canada') %>%
`[[`("gdp")
suppressPackageStartupMessages(library(tidyverse))
tibble(let = letters,
num = 1:length(letters),
comb = paste0(let, num))
tribble(
~name, ~time,
"Frank", 30,
"Lisa", 15,
"Fred", 40
)
write_csv(iris, 'iris.csv')
read_delim('iris.txt', '$')
write_delim(iris, 'iris.txt', '$')
read_delim('iris.txt', '$')
lotr1 = read_csv('https://raw.githubusercontent.com/jennybc/lotr-tidy/master/data/The_Fellowship_Of_The_Ring.csv');
lotr2 = read_csv('https://raw.githubusercontent.com/jennybc/lotr-tidy/master/data/The_Two_Towers.csv');
lotr3 = read_csv('https://github.com/jennybc/lotr-tidy/blob/master/data/The_Return_Of_The_King.csv');
(lotr_untidy = bind_rows(lotr1,lotr2))
(lotr_untidy = bind_rows(lotr1,lotr2,lotr3))
lotr3 = read_csv('https://raw.githubusercontent.com/jennybc/lotr-tidy/master/data/The_Return_Of_The_King.csv');
(lotr_untidy = bind_rows(lotr1,lotr2,lotr3))
gather(lotr_untidy, key='Gender', value='Word', Female, Male)
install.packages("nycflights13")
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(nycflights13))
(a <- tibble(x1 = LETTERS[1:3], x2 = 1:3))
(b <- tibble(x1 = LETTERS[c(1,2,4)], x3 = c("T", "F", "T")))
left_join(a, b, by="x1")
right_join(a, b, by="x1")
inner_join(a, b, "x1")
full_join(a, b, "x1")
inner_join(a,b)
left_join(a,b)
left_join(a, b, by = c("x1", "x3"))
left_join(a, b, by = c("x1" = "x3"))
# make data frame c and use inner_join()
(c <- tibble(x1 = c(LETTERS[1:2],"x"), x2 = c(1,4,5)))
left_join(a, c)
#check the tibbles included in `nycflights13` package
class(flights)
colnames(flights)
colnames(airlines)
colnames(weather)
flights2 <- flights[1:1000,] %>%
select(year, tailnum, carrier, time_hour)
# Which join function to use?
left_join(flights2, airlines, by="names")
colnames(flights)
colnames(airlines)
# Which join function to use?
left_join(flights2, airlines, by="name")
colnames(flights)
colnames(airlines)
colnames(flights)
# Which join function to use?
left_join(flights2, airlines, by="carrier")
left_join(flights2, weather, by=c('year', 'time_hour'))
left_join(flights, weather, by='time_hour')
left_join(flights2, weather, by='time_hour')
semi_join(a, b)
anti_join(a,b)
semi_join(a,c)
(z <- tibble(x1 = c("B", "C", "D"), x2 = 2:4))
(y <-  tibble(x1 = LETTERS[1:3], x2 = 1:3))
(z <- tibble(x1 = c("B", "C", "D"), x2 = 2:4))
intersect(y,z)
union(y,z)
setdiff(y,z)
(x <- tibble(x1 = c("B", "C", "D"), x3 = 2:4))
intersect(y,x)
bind_rows(y, z)
bind_cols(y, z)
bind_cols(y, x)
